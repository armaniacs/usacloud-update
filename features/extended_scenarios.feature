# language: ja
フィーチャ: 拡張ユーザーシナリオ
  usacloud-updateツールの複雑な使用ケースを検証する

  背景:
    前提 usacloud CLIがインストールされている
    かつ 有効なAPIキーが設定されている
    かつ テスト用のサンドボックス環境が利用可能

  @error-handling
  シナリオ: ネットワークエラー時の適切なエラーハンドリング
    前提 ネットワーク接続が不安定な状況
    もし サンドボックスモードでusacloudコマンドを実行する
    ならば 適切なエラーメッセージが表示される
    かつ リトライ機能が提案される
    かつ エラーログが記録される

  @performance
  シナリオ: 大量ファイル処理のパフォーマンス要件
    前提 100個のスクリプトファイルが存在する
    もし バッチモードで全ファイルを処理する
    ならば 5分以内に処理が完了する
    かつ 並行実行数が適切に制御される
    かつ メモリ使用量が1GB以下に保たれる

  @complex-workflow
  シナリオ: マルチプロファイル環境での複雑なワークフロー
    前提 本番用とテスト用のプロファイルが存在する
    もし テスト用プロファイルに切り替える
    かつ スクリプトファイルを変換・実行する
    かつ 本番用プロファイルに切り替える
    かつ 同じスクリプトを本番環境で実行する
    ならば 各環境で適切な設定が適用される
    かつ 実行結果が環境ごとに記録される

  @regression
  シナリオ: 既知の問題の回帰テスト
    前提 過去に修正されたバグのテストケース
    もし 同じ条件でツールを実行する
    ならば バグが再発していない
    かつ 期待通りの結果が得られる

  @security
  シナリオ: セキュリティ機能の包括テスト
    前提 機密情報を含むスクリプトファイルが存在する
    もし セキュア実行モードでスクリプトを処理する
    ならば 機密情報がログから除外される
    かつ 暗号化されて保存される
    かつ 監査ログが適切に記録される

  @concurrent-access
  シナリオ: 同時実行でのリソース競合テスト
    前提 複数のユーザープロセスが同時に起動する
    もし 同じプロファイルに対して同時にアクセスする
    ならば 適切な排他制御が動作する
    かつ データの整合性が保たれる
    かつ デッドロックが発生しない

  @resource-limits
  シナリオ: リソース制限下での動作確認
    前提 システムリソースが制限されている
    もし 大量のデータを処理する
    ならば リソース不足が適切に検出される
    かつ グレースフルに処理が停止する
    かつ 部分的な結果が保存される

  @integration
  シナリオ: 外部システムとの統合テスト
    前提 外部CI/CDシステムが設定されている
    もし 自動テストパイプラインを実行する
    ならば 全てのテストが正常に実行される
    かつ 結果が外部システムに通知される
    かつ 失敗時に適切なエラー情報が提供される

  @data-integrity
  シナリオ: データ整合性の検証
    前提 複雑なデータ変換処理が必要なスクリプト
    もし データ変換を実行する
    ならば 元データが破損していない
    かつ 変換結果が正確である
    かつ バックアップが適切に作成される

  @rollback
  シナリオ: 失敗時のロールバック機能
    前提 実行中にエラーが発生する条件
    もし バッチ処理を実行してエラーが発生する
    ならば 部分的な変更がロールバックされる
    かつ 元の状態に復元される
    かつ エラー詳細が記録される

  @monitoring
  シナリオ: システム監視と健全性チェック
    前提 システム監視が有効化されている
    もし 長時間の処理を実行する
    ならば システムメトリクスが記録される
    かつ 異常値が検出された場合に警告される
    かつ パフォーマンス統計が出力される

  @upgrade-compatibility
  シナリオ: バージョンアップ互換性テスト
    前提 古いバージョンで作成された設定ファイル
    もし 新しいバージョンでツールを実行する
    ならば 設定が適切に移行される
    かつ 既存の機能が正常に動作する
    かつ 非互換性が警告される

  @disaster-recovery
  シナリオ: 災害復旧シナリオ
    前提 システム障害が発生した状況
    もし 復旧処理を実行する
    ならば 重要なデータが復元される
    かつ サービスが正常に再開される
    かつ 障害の原因が記録される